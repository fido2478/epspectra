%##########################################################
%#  This module is to control COMPUTE_DATA modules.
%##########################################################

module COMPUTE_DATA:

type StrlSampleIndex;
type StrlSampleRange;
type StrlSampleSize;

constant INITIAL_INDEX : StrlSampleIndex;
constant INITIAL_SIZE : StrlSampleSize;
constant INITIAL_RANGE : StrlSampleRange;

input name : string;
output output_compute:integer;
output MyMarkedData:StrlSampleRange;

function CHECK_MYWRITERLL(string):integer;
function CHECK_MYMARKEDDATA_SIZE(string):integer;
function GET_NUMBERINPUTS(string):integer;
function REALCOMPUTEDATA(string,integer):StrlSampleSize;
function CMPSAMPLESIZE(StrlSampleSize,StrlSampleSize):integer;
function GET_MYMARKEDINDEX(string):StrlSampleIndex;
function GET_MYMARKEDSIZE(string):StrlSampleSize;
procedure SET_MARKEDWP()(string,StrlSampleIndex);
function ADD_SAMPLEINDEX(StrlSampleIndex,StrlSampleSize):StrlSampleIndex;
procedure WRITEDATA()(string,integer);
function GETWP(string):StrlSampleIndex;
function GET_MYMARKEDDATA(string):StrlSampleRange;
procedure LOCALINCAWAITTICK()(string);%{perfgraph}%
procedure GLOBALAWAITTICKSTART()();
procedure GLOBALAWAITTICKSTOP()();
%
% body part
%
var not_source:=0:integer,
    not_complete_flag:=0:integer,
    temp_index:=INITIAL_INDEX:StrlSampleIndex,
    complete_var:=INITIAL_SIZE:StrlSampleSize in
   trap EXIT_FUNC in
      trap GOTO_UNMARK in
	 if CHECK_MYWRITERLL(?name)=0 then
	    call LOCALINCAWAITTICK()(?name);%{perfgraph}%
	    await tick;
	    emit output_compute(0);
	    exit EXIT_FUNC
	 end if;
	 if CHECK_MYMARKEDDATA_SIZE(?name)=0 then
	    call LOCALINCAWAITTICK()(?name);%{perfgraph}%
	    await tick;
	    emit output_compute(0);
	    exit EXIT_FUNC
	 end if;
	 not_source:=1;
	 complete_var:=REALCOMPUTEDATA(?name,not_source);	 
	 if CMPSAMPLESIZE(GET_MYMARKEDSIZE(?name),complete_var)>0 then
	    not_complete_flag:=not_complete_flag-1
	 end if;
      end trap;%{GOTO_UNMARK}%
%{start Unmark section}%
      if not_complete_flag < 0 then
	 temp_index:=ADD_SAMPLEINDEX(GET_MYMARKEDINDEX(?name),complete_var);
	 call SET_MARKEDWP()(?name,temp_index)
      end if;
      call WRITEDATA()(?name,not_source);
      temp_index:=GETWP(?name);
      emit MyMarkedData(GET_MYMARKEDDATA(?name));
      call LOCALINCAWAITTICK()(?name);%{perfgraph}%
      call GLOBALAWAITTICKSTART()();
      await tick;
      call GLOBALAWAITTICKSTOP()();
      emit output_compute(not_complete_flag)
   end trap
end var
end module